The impact of immigration on microbial community composition in full-scale anaerobic digesters
================
Rasmus Kirkegaard et al 2017
`r format(Sys.time(), '%d-%m-%Y')`, Aalborg, Denmark

Project scope
=============

This project deals with the microbial analysis of full scale anaerobic digesters at wastewater treatment plants based on 16S rRNA gene amplicon sequencing. The bacterial part of the community has been sequenced using primers covering the V1-V3 region of the 16S rRNA gene. (27F (AGAGTTTGATCCTGGCTCAG, Lane 1991) and 534R (ATTACCGCGGCTGCTGG, Muyzer et al, 1993)). The Archaeal part of the community has been sequenced using primers covering the V3-V5 region of the 16S rRNA gene. (340F (CCCTAHGGGGYGCASCA, Pinto et al., 2012) and 915R (GWGCYCCCCCGYCAATTC, Pinto et al., 2012)). The data is available at figshare <https://dx.doi.org/10.6084/m9.figshare.4308191>.

Load libraries
--------------

`{r , message=FALSE, warning=FALSE, echo=T} library(knitr) #library("devtools") #install_github("MadsAlbertsen/ampvis") library(ampvis) library(cowplot) library(plyr) library(ggrepel) library(plotly) library(gridExtra) library(grid)`

Load data
---------

`{r echo=T} status<-try(load("data.RData"),silent = T)  if(class(status)=="try-error") {    rm(list = ls())    print("Loading data from url")    status<-try(load(url("https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/7448392/data.RData")))     if(class(status)=="try-error") {       rm(list = ls())       print("Loading data from scratch")       knit("Load_data.Rmd")     }  }`

Sessioninfo
-----------

Print sessioninfo for reproducibility as R and package versions are known to make a difference (and occasionally conflicts).

``` {r}
sessionInfo()
```

**This was tested and working with:** R version 3.4.0 (2017-04-21) Platform: x86\_64-w64-mingw32/x64 (64-bit) Running under: Windows &gt;= 8 x64 (build 9200)

Matrix products: default

locale: \[1\] LC\_COLLATE=English\_United Kingdom.1252 LC\_CTYPE=English\_United Kingdom.1252 LC\_MONETARY=English\_United Kingdom.1252 \[4\] LC\_NUMERIC=C LC\_TIME=English\_United Kingdom.1252

attached base packages: \[1\] stats4 parallel grid stats graphics grDevices utils datasets methods base

other attached packages: \[1\] plotly\_4.7.0 plyr\_1.8.4 cowplot\_0.7.0 ampvis\_1.27.0 scales\_0.4.1
\[6\] gridExtra\_2.2.1 magrittr\_1.5 dplyr\_0.7.2 stringr\_1.2.0 ggdendro\_0.1-20
\[11\] DESeq2\_1.16.1 SummarizedExperiment\_1.6.3 DelayedArray\_0.2.7 matrixStats\_0.52.2 Biobase\_2.36.2
\[16\] GenomicRanges\_1.28.3 GenomeInfoDb\_1.12.2 data.table\_1.10.4 Biostrings\_2.44.2 XVector\_0.16.0
\[21\] IRanges\_2.10.2 S4Vectors\_0.14.3 BiocGenerics\_0.22.0 RColorBrewer\_1.1-2 igraph\_1.1.2
\[26\] vegan\_2.4-3 lattice\_0.20-35 permute\_0.9-4 phyloseq\_1.20.0 reshape2\_1.4.2
\[31\] ggrepel\_0.6.5 ggplot2\_2.2.1 knitr\_1.16 devtools\_1.13.2

loaded via a namespace (and not attached): \[1\] nlme\_3.1-131 bitops\_1.0-6 httr\_1.2.1 tools\_3.4.0 backports\_1.1.0
\[6\] R6\_2.2.2 rpart\_4.1-11 Hmisc\_4.0-3 DBI\_0.7 lazyeval\_0.2.0
\[11\] mgcv\_1.8-17 colorspace\_1.3-2 ade4\_1.7-6 nnet\_7.3-12 withr\_1.0.2
\[16\] curl\_2.6 compiler\_3.4.0 git2r\_0.18.0 htmlTable\_1.9 checkmate\_1.8.2
\[21\] genefilter\_1.58.1 digest\_0.6.12 foreign\_0.8-67 base64enc\_0.1-3 pkgconfig\_2.0.1
\[26\] htmltools\_0.3.6 htmlwidgets\_0.8 rlang\_0.1.1 RSQLite\_1.1-2 bindr\_0.1
\[31\] jsonlite\_1.5 BiocParallel\_1.10.1 acepack\_1.4.1 RCurl\_1.95-4.8 GenomeInfoDbData\_0.99.0 \[36\] Formula\_1.2-1 biomformat\_1.4.0 Matrix\_1.2-9 Rcpp\_0.12.11 munsell\_0.4.3
\[41\] ape\_4.1 stringi\_1.1.5 MASS\_7.3-47 zlibbioc\_1.22.0 rhdf5\_2.20.0
\[46\] splines\_3.4.0 multtest\_2.32.0 annotate\_1.54.0 locfit\_1.5-9.1 geneplotter\_1.54.0
\[51\] codetools\_0.2-15 XML\_3.98-1.8 glue\_1.1.0 latticeExtra\_0.6-28 foreach\_1.4.3
\[56\] tidyr\_0.6.3 purrr\_0.2.2.2 gtable\_0.2.0 assertthat\_0.2.0 xtable\_1.8-2
\[61\] viridisLite\_0.2.0 survival\_2.41-3 tibble\_1.3.3 iterators\_1.0.8 AnnotationDbi\_1.38.1
\[66\] memoise\_1.1.0 bindrcpp\_0.2 cluster\_2.0.6

Analyse the microbial data
==========================

Bacteria
--------

### Subset and filtering

The principle behind ampvis is that you first subset the data to what you want to look at using `phyloseq` and then visualise it using `ampvis`. Samples can be subset based on any available metadata. See the [phyloseq guide](http://joey711.github.io/phyloseq/tutorials-index) for more examples.

`{r warning=FALSE, eval=F} sample_variables(b_d)`

Before we analyse the data it is often convenient to remove low abundant OTUs, as they are too noisy to result in meaningful conclusions. This can be done using the `filter_taxa` phyloseq function. Here we keep OTUs with an abundance of 0.1 % or more in at least one sample.

`{r warning=FALSE} b_transformed<-transform_sample_counts(b_d, function(x) x / sum(x) * 100) b_df <- filter_taxa(b_transformed, function(x) max(x) >= 0.1, TRUE) remove(b_transformed)`

`{r warning=FALSE} foamsamples<-c("SA-RHK-527",                "SA-RHK-529",                "SA-RHK-531",                "SA-RHK-1052",                "SA-RHK-1053",                "SA-RHK-1054",                "SA-RHK-1055",                "SA-RHK-1056",                "SA-RHK-1075",                "SA-RHK-1243",                "SA-RHK-1244",                "SA-RHK-1302",                "SA-RHK-1339"                )`

\`\`\`{r warning=FALSE, echo=F} \# Add a new set of variables \# Make a variable sample\_data(b\_df)$simple\_var&lt;-"empty" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Sample\_type") %in% c("WWTP-Sludge","Procestank"))\]&lt;-"Surplus\_sludge" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Sample\_type") %in% c("Before\_primary\_settling","Influent"))\]&lt;-"Before\_primary\_settling" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Sample\_type") %in% c("After\_primary\_settling"))\]&lt;-"After\_primary\_settling" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Sample\_type") %in% c("Effluent"))\]&lt;-"Effluent" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Sample\_type") %in% c("Digester"))\]&lt;-"Digester" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Temperature") %in% "Thermophilic")\]&lt;-"Thermophilic" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Temperature") %in% "Mesophilic")\]&lt;-"Mesophilic" sample\_data(b\_df)$simple\_var\[which(get\_variable(b\_df, "Temperature") %in% "THP")\]&lt;-"THP"

Make a variable
===============

sample\_data(b\_df)$simple\_var2&lt;-"empty" sample\_data(b\_df)$simple\_var2\[which(get\_variable(b\_df, "Sample\_type") %in% c("WWTP-Sludge","Processtank"))\]&lt;-"Surplus\_sludge" sample\_data(b\_df)$simple\_var2\[which(get\_variable(b\_df, "Sample\_type") %in% c("Effluent"))\]&lt;-"Effluent" sample\_data(b\_df)$simple\_var2\[which(get\_variable(b\_df, "Sample\_type") %in% c("Before\_primary\_settling","Influent"))\]&lt;-"Primary\_sludge" \# 20160913: MNI & JMK told me that "After\_primary\_settling" is not a part of the primary sludge sample\_data(b\_df)$simple\_var2\[which(get\_variable(b\_df, "Temperature") %in% "Thermophilic")\]&lt;-"Thermophilic" sample\_data(b\_df)$simple\_var2\[which(get\_variable(b\_df, "Temperature") %in% "Mesophilic")\]&lt;-"Mesophilic" sample\_data(b\_df)$simple\_var2\[which(get\_variable(b\_df, "Temperature") %in% "THP")\]&lt;-"THP"

Make a variable
===============

sample\_data(b\_df)$influent\_or\_ad&lt;-"empty" sample\_data(b\_df)$influent\_or\_ad\[which(get\_variable(b\_df, "simple\_var") %in% c("Before\_primary\_settling","Surplus\_sludge","Influent"))\]&lt;-"a) Influent" \# \# 20160913: MNI & JMK told me that "After\_primary\_settling" is not a part of the primary sludge sample\_data(b\_df)$influent\_or\_ad\[which(get\_variable(b\_df, "simple\_var") %in% c("Thermophilic","Mesophilic","THP","Digester"))\]&lt;-"b) Digester" sample\_data(b\_df)$influent\_or\_ad\[which(get\_variable(b\_df, "simple\_var") %in% c("Effluent"))\]&lt;-"c) Effluent"

Make a variable
===============

sample\_data(b\_df)$simple\_var3&lt;-"empty" sample\_data(b\_df)$simple\_var3\[which(get\_variable(b\_df, "simple\_var") %in% c("Before\_primary\_settling","Influent"))\]&lt;-"a) Primary sludge" \# 20160913: MNI & JMK told me that "After\_primary\_settling" is not a part of the primary sludge sample\_data(b\_df)$simple\_var3\[which(get\_variable(b\_df, "simple\_var") %in% c("Surplus\_sludge"))\]&lt;-"b) Surplus sludge" sample\_data(b\_df)$simple\_var3\[which(get\_variable(b\_df, "simple\_var") %in% c("Mesophilic"))\]&lt;-"c) Mesophilic" sample\_data(b\_df)$simple\_var3\[which(get\_variable(b\_df, "simple\_var") %in% c("Thermophilic"))\]&lt;-"d) Thermophilic" sample\_data(b\_df)$simple\_var3\[which(get\_variable(b\_df, "simple\_var") %in% c("THP"))\]&lt;-"e) THP"

Make a variable
===============

sample\_data(b\_df)$order\_type&lt;-"empty" sample\_data(b\_df)$order\_type\[which(get\_variable(b\_df, "simple\_var") %in% c("Before\_primary\_settling","Influent"))\]&lt;-"1\_primary" \# 20160913: MNI & JMK told me that "After\_primary\_settling" is not a part of the primary sludge sample\_data(b\_df)$order\_type\[which(get\_variable(b\_df, "simple\_var") %in% c("Surplus\_sludge"))\]&lt;-"2\_surplus" sample\_data(b\_df)$order\_type\[which(get\_variable(b\_df, "simple\_var") %in% c("Mesophilic","Thermophilic","THP","Digester"))\]&lt;-"3\_digester" sample\_data(b\_df)$order\_type\[which(get\_variable(b\_df, "simple\_var") %in% c("Effluent"))\]&lt;-"4\_effluent"

Make a variable
===============

sample\_data(b\_df)$Foamevent&lt;-"normal" sample\_data(b\_df)$Foamevent\[which(get\_variable(b\_df, "SA\_ID") %in% foamsamples)\]&lt;-"foam" \`\`\`

Here we will use subset to select samples by variables in the metadata and store the data in the object b\_ads.

`{r warning=FALSE} listof_ads<-c("Aalborg_West","Viborg","Fredericia","Damhusaaen","Randers","Herning","Fornaes","Aalborg_East","Aaby","Hjoerring","Soeholt","Slagelse","Ejby_Moelle","Bjergmarken","Lundtofte","Hobro","Avedoere","Naestved","Ringkoebing", "Esbjerg_West")`

`{r warning=FALSE} b_ads<- subset_samples(b_df, Sample_location %in% listof_ads & Temperature %in% c("THP","Mesophilic","Thermophilic") & !(Project_name %in% c("DNAextraction_optimisation_from_biogas","VTU_Case_study_-_GasMixCase_Viborg")))`

Lets have a look at the data

`{r warning=FALSE, fig.height=8,fig.width=8,fig.align="center"} amp_ordinate(data = b_ads)+theme_cowplot()+   theme(plot.margin = unit(c(0,0,0,0), "mm"))`

Let us add some information to see if we can see any patterns

`{r warning=FALSE, fig.height=10,fig.width=12,fig.align="center"} amp_ordinate(data = b_ads,              #plot.label = "SEQ_ID",              plot.color = "Temperature",              #plot.group.label = "Temperature",              #plot.group.label.size = 7,              plot.color.order = c("THP","Thermophilic","Mesophilic"))+theme_cowplot()+   theme(plot.margin = unit(c(0,0,0,0), "mm"), legend.position="bottom")`

There seems to be somewhat defined microbial communities with regard to the process types: Mesophilic, Thermophilic and THP. However, some of the samples seem to be clustering with the wrong groups. So I did some microbial detective work.

-   It turns out that Aaby was actually operating at mesophilic temperatures in 2011 even though they initially reported otherwise.
-   The mesophilic reactor in Herning is connected in series with the thermophilic reactor as influent, and is thus not representative for a "standard" mesophilic reactor.

It thus seems fair to remove these and samples like it for now.

\`\`\`{r warning=FALSE} skiplist&lt;-c(foamsamples,"SA-RHK-921", "SA-RHK-1028","SA-RHK-1065","SA-RHK-1311","SA-RHK-19","SA-RHK-212") \#"SA-RHK-1028" (Sample from aaby 2011, where the plant was actually run with a mesophilic process) \#"SA-RHK-1065" (Sample from aaby 2011, where the plant was actually run with a mesophilic process) \#"SA-RHK-1311" (Sample from aaby 2015, what are they doing now???) \#"SA-RHK-921" (Sample from Herning when there was no info about reactor number) \#"Herning\_M" is connected in series to a thermophilic plant and is thus not representative for a mesophilic plant skiplist2&lt;-c(paste0("16SAMP-",9094:9147),paste0("16SAMP-",7593:7614),paste0("16SAMP-",8858:8867),paste0("16SAMP-",8984:8995),paste0("16SAMP-",8902:8903),"16SAMP-3461","16SAMP-3455","16SAMP-11802","16SAMP-11829","16SAMP-3464")

b\_ads\_s&lt;- subset\_samples(b\_ads, !(SA\_ID %in% skiplist) & !(Sample\_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) & !(Dataset=="CJH" & Temperature=="THP")) \`\`\`

Archaea
-------

`{r warning=FALSE} a_df <- filter_taxa(a_d, function(x) max(x) >= 0.1, TRUE)`

`{r warning=FALSE} a_ads<- subset_samples(a_df, Sample_location %in% listof_ads & Temperature %in% c("THP","Mesophilic","Thermophilic") & !(Project_name %in% c("DNAextraction optimisation from biogas","VTU Case study - GasMixCase Viborg")))`

`{r warning=FALSE , fig.height=10,fig.width=12, echo=F,fig.align="center"}  amp_ordinate(data = a_ads,               plot.color = "Temperature"               )+theme_cowplot()`

The Archaea shows a clear cut between thermophilic reactors and mesophilic reactors (The THP reactors do also have a mesophilic process). Removing the samples that were identified to be wrongly classified before will make this trend even clearer.

`{r warning=FALSE} a_ads_s<- subset_samples(a_ads, !(SA_ID %in% skiplist) & !(Sample_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ"))`

With the filtered dataset we can now proceed and prepare the figures in the paper

Main figures
============

Figure 1
--------

Panel figure with 4 PCA plots.

1.  Archaea separates by temperature
2.  Bacteria separates into 3 clusters
3.  Mesophilic bacteria cluster by plant?
4.  Thermophilic bacteria cluster by plant?

### Figure 1a

`{r warning=FALSE ,fig.align="center"} p1_a<-amp_ordinate(data = a_ads_s,              plot.color = "Temperature",              plot.group.label = "Temperature",              plot.group.label.size = 7,              plot.color.order = c("THP","Thermophilic","Mesophilic"))+theme_cowplot()+   theme(plot.margin = unit(c(0,0,0,0), "mm"))+theme(legend.position="none")`

### Figure 1b

`{r warning=FALSE} p1_b<-amp_ordinate(data = b_ads_s,              plot.color = "Temperature",              plot.group.label = "Temperature",              plot.group.label.size = 7,              plot.color.order = c("THP","Thermophilic","Mesophilic")              )+theme_cowplot()+   theme(plot.margin = unit(c(0,0,0,0), "mm"))+theme(legend.position="none")`

### Figure 1c

How do the samples group within the Mesophilic cluster?

`{r warning=FALSE, fig.height=10,fig.width=12, echo=F,fig.align="center"} b_ads_sM<- subset_samples(b_ads_s, Temperature=="Mesophilic" & Project_name!="VTU Case study - GasMixCase Viborg") # The Gasmix case is removed to avoid the main difference to be between Viborg and other plants due to uneven sample number. p1_c<-amp_ordinate(data = b_ads_sM,              plot.color = "Sample_location",              plot.group = "chull",              plot.group.label = "Sample_location"              )+theme_cowplot()+   theme(plot.margin = unit(c(0,0,0,0), "mm"))+theme(legend.position="none")`

### Figure 1d

How do the samples group within the Thermophilic cluster?

`{r warning=FALSE, fig.height=10,fig.width=12, echo=F,fig.align="center"} b_ads_sT<- subset_samples(b_ads_s, Temperature=="Thermophilic") p1_d<-amp_ordinate(data = b_ads_sT,              plot.color = "Sample_location",              plot.group = "chull",              plot.group.label = "Sample_location"              )+theme_cowplot()+   theme(plot.margin = unit(c(0,0,0,0), "mm"))+theme(legend.position="none")`

### Figure 1 combined

\`\`\`{r warning=FALSE ,fig.align="center",fig.height=10,fig.width=10} p1\_am&lt;-p1\_a+ggtitle("Archaea") p1\_bm&lt;-p1\_b+ggtitle("Bacteria") p1\_cm&lt;-p1\_c+ggtitle("Bacteria - Mesophilic") p1\_dm&lt;-p1\_d+ggtitle("Bacteria - Thermophilic") plot\_grid(p1\_am, p1\_bm, p1\_cm, p1\_dm, align='vh',ncol = 2, labels=c('A', 'B', 'C', 'D'))

Save the figure
===============

ggsave(filename = "Figure1.pdf",width = 10,height = 10, useDingbats = FALSE)
============================================================================

\`\`\` \#\# Figure 2 Panel figure with 2 heatmaps.

1.  Phylum level heatmap for Archaea
2.  Genus level heatmap for Archaea

### Figure 2a

Phylum level heatmap for archaea

\`\`\`{r warning=FALSE ,fig.align="center",fig.height=3,fig.width=15} p2\_a&lt;-amp\_heatmap(a\_ads\_s,tax.aggregate = "Phylum",tax.show = 5,group = c("Temperature","Sample\_location"),color.vector = c("white","red"),plot.na = T)+ facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none")

Change labels
=============

original\_labels&lt;-levels(p2\_a*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p2\_a*d**a**t**a*Group.label&lt;-mapvalues(p2\_a*d**a**t**a*Group,original\_labels,c(new\_labels)) p2\_a&lt;-p2\_a+aes(x=p2\_a*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank()) \`\`\`

### Figure 2b

Genus level heatmap for Archaea \`\`\`{r warning=FALSE,fig.align="center",fig.width=15} p\_temp&lt;-amp\_heatmap(a\_ads\_s,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = 20,group = c("Temperature","Sample\_location"),color.vector = c("white","red"),plot.na = T)+ facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none")

Change labels
=============

original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p2\_b&lt;-p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank()) \`\`\`

### Figure 2 combined

\`\`\`{r warning=FALSE,fig.align="center",fig.width=18, fig.height=13} plot\_grid(p2\_a, p2\_b, align='vh',ncol = 1, labels=c('A', 'B'),rel\_heights = c(4,9))

Save the figure
===============

ggsave(filename = "Figure2.pdf",width = 18,height = 13, useDingbats = FALSE)
============================================================================

\`\`\`

Figure 3
--------

Panel figure with 2 heatmaps.

1.  Phylum level heatmap for bacteria
2.  Genus level heatmap for bacteria

### Figure 3a

Phylum level heatmap for bacteria

\`\`\`{r warning=FALSE,fig.align="center",fig.width=15} p3\_a&lt;-amp\_heatmap(b\_ads\_s,tax.aggregate = "Phylum",tax.show = 20,group = c("Temperature","Sample\_location"),color.vector = c("white","red"),plot.na = T)+ facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none")

Change labels
=============

original\_labels&lt;-levels(p3\_a*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p3\_a*d**a**t**a*Group.label&lt;-mapvalues(p3\_a*d**a**t**a*Group,original\_labels,c(new\_labels)) p3\_a&lt;-p3\_a+aes(x=p3\_a*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank()) \`\`\`

### Figure 3b

Heatmap of top 20 genera in anaerobic digesters

`{r warning=FALSE,fig.align="center",fig.height=9,fig.width=15} p3_b<-amp_heatmap(b_ads_s,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = 20,group = c("Temperature","Sample_location"),color.vector = c("white","red"),plot.na = T)+   facet_grid(~ Temperature,scales="free_x",space="free")+   theme(plot.margin = unit(c(0,0,0,0), "mm"),         axis.text.y = element_text(color = "black"),         strip.text.x = element_text(color = "black"),         axis.text.x = element_text(vjust=0.5,color = "black"),legend.position="none") # Change labels original_labels<-levels(p3_b$data$Group) new_labels <- toupper(sub(".*? ", "", original_labels)) p3_b$data$Group.label<-mapvalues(p3_b$data$Group,original_labels,c(new_labels))  p3_b<-p3_b+aes(x=p3_b$data$Group.label)+theme(axis.title.x=element_blank())`

### Figure 3 combined

\`\`\`{r warning=FALSE,fig.align="center",fig.width=18, fig.height=13} plot\_grid(p3\_a, p3\_b, align='vh',ncol = 1, labels=c('A', 'B'),rel\_heights = c(1,1))

Save the figure
===============

ggsave(filename = "Figure3.pdf",width = 18,height = 13, useDingbats = FALSE)
============================================================================

\`\`\`

Figure 4
--------

Panel figure with 2 heatmaps.

1.  Genus level heatmap for bacteria sorted by abundance in influent streams
2.  Genus level heatmap for bacteria sorted by abundance in digesters

\`\`\`{r warning=FALSE,fig.align="center",fig.height=7,fig.width=13} n\_taxa&lt;-20 b\_ads\_sFig5\_sel&lt;- subset\_samples(b\_df, !(SA\_ID %in% skiplist) & !(Sample\_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) & order\_type!="empty" & simple\_var3!="empty" & Sample\_type!="Effluent" & !(Dataset=="CJH" & Temperature=="THP"))

Sorted by influent abundance
============================

b\_ads\_sFig5\_sel\_sort&lt;- subset\_samples(b\_df, !(SA\_ID %in% skiplist) & !(Sample\_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) & order\_type %in% c("1\_primary","2\_surplus") & !(Dataset=="CJH" & Temperature=="THP"))

p&lt;-amp\_heatmap(b\_ads\_sFig5\_sel\_sort,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = n\_taxa, color.vector = c("white","red"))

gvf&lt;-rev(levels(p*d**a**t**a*Display))\[1:n\_taxa\] sort&lt;-rev(gvf)

p\_temp&lt;-amp\_heatmap(b\_ads\_sFig5\_sel,group = "simple\_var3",tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = sort,order.y = sort,plot.na = T, color.vector = c("white","red"))

Change labels
=============

original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p5\_a&lt;-p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank(),legend.position="none",axis.text.x = element\_text(vjust=0.5,color = "black"))

Sorted by digester abundance
============================

b\_ads\_sFig5\_sel\_sort&lt;- subset\_samples(b\_df, !(SA\_ID %in% skiplist) & !(Sample\_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) & simple\_var3 %in% c("c) Mesophilic","d) Thermophilic") & !(Dataset=="CJH" & Temperature=="THP"))

p&lt;-amp\_heatmap(b\_ads\_sFig5\_sel\_sort,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = n\_taxa, color.vector = c("white","red"))

gvf&lt;-rev(levels(p*d**a**t**a*Display))\[1:n\_taxa\] sort&lt;-rev(gvf)

p\_temp&lt;-amp\_heatmap(b\_ads\_sFig5\_sel,group = "simple\_var3",tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = sort,order.y = sort,plot.na = T, color.vector = c("white","red"))

Change labels
=============

original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p5\_b&lt;-p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank(),legend.position="none",axis.text.x = element\_text(vjust=0.5,color = "black"))

plot\_grid(p5\_a, p5\_b, align='vh',ncol = 2, labels=c('A', 'B'))

Save the figure
===============

fname&lt;-paste0("Figure4.pdf")
===============================

ggsave(filename = fname,width = 13,height = 7, useDingbats = FALSE)
===================================================================

\`\`\`

Calculate ratios

\`\`\`{r warning=FALSE} reactors&lt;-c("Mesophilic","Thermophilic","THP") ratiodf&lt;-data.frame(RATIO=double(), res\_RT.tag=character(), res\_RT.Mean=double(), T\_reactor=character()) ratiodf\_h&lt;-data.frame(init=1337) for (T\_reactor in reactors) {

#### 

Digester
========

### 

d\_sel&lt;- subset\_samples(b\_ads\_s, Temperature==T\_reactor)

res&lt;-data.frame("tag"=names(apply(otu\_table(d\_sel), 1, mean)),"Mean"=apply(otu\_table(d\_sel), 1, mean))

res\_RT&lt;-res

#### 

For influent
============

### 

d\_sel&lt;- subset\_samples(b\_df, Sample\_type=="Influent")

res&lt;-data.frame("tag"=names(apply(otu\_table(d\_sel), 1, mean)),"Mean"=apply(otu\_table(d\_sel), 1, mean))

res\_inf&lt;-res \#\#\#\# \# Surplus sludge \#\#\# d\_sel&lt;- subset\_samples(b\_df, simple\_var3=="b) Surplus sludge")

res&lt;-data.frame("tag"=names(apply(otu\_table(d\_sel), 1, mean)),"Mean"=apply(otu\_table(d\_sel), 1, mean))

res\_AS&lt;-res

Calculate ratio and plot
========================

options(scipen = 8) RATIO\_inf&lt;-res\_RT*M**e**a**n*/*r**e**s*<sub>*i*</sub>*n**f*Mean RATIO\_AS&lt;-res\_RT*M**e**a**n*/*r**e**s*<sub>*A*</sub>*S*Mean RATIO&lt;-apply(cbind(RATIO\_inf,RATIO\_AS),1,min)

mydf&lt;-data.frame(RATIO,res\_RT*t**a**g*, *r**e**s*<sub>*R*</sub>*T*Mean)

For creating a table of all the abundance values
================================================

tempdf&lt;-cbind(mydf,T\_reactor) tempdf*F**r**e**q**u**e**n**c**y* &lt; −*t**e**m**p**d**f*res\_RT.Mean/sum(tempdf$res\_RT.Mean) ratiodf&lt;-rbind(ratiodf,tempdf) ratiodf\_h&lt;-cbind(ratiodf\_h,mydf) } \`\`\`

\`\`\`{r warning=FALSE, fig.align="center", fig.height=10,fig.width=10} ratiodf\_h&lt;-ratiodf\_h\[,c(3,2,5,8,4,7,10)\] colnames(ratiodf\_h)&lt;-c("OTU",paste0("RATIO.",reactors),paste0("Meanabundance.",reactors)) rownames(ratiodf\_h)&lt;-ratiodf\_h$OTU finalfram&lt;-merge(ratiodf\_h,taxinfo,by="row.names",all.x=TRUE) \# Merge taxonomy and ratio dataframes maxabundance&lt;-apply(X = finalfram\[,c("Meanabundance.Mesophilic","Meanabundance.Thermophilic","Meanabundance.THP")\], MARGIN = 1,FUN = "max") \# Calcuclate maximum (mean) abundance maxratio&lt;-apply(X = finalfram\[,c("RATIO.Mesophilic","RATIO.Thermophilic","RATIO.THP")\], MARGIN = 1,FUN = "max") \# Calculate maximum ratio finalframe&lt;-cbind(finalfram,maxabundance,maxratio) \# Combine newdata &lt;- finalframe\[order(maxabundance,decreasing = T),\] \# Order the OTUs by abundance newdata\_lim&lt;-newdata\[which(newdata$maxabundance&gt;0),c(3:14,2)\] \# Remove OTUs with an abundance of 0 and select which columns to save

Save data
=========

write.csv(newdata\_lim,file = "tableS2.csv",row.names = F)
==========================================================

\`\`\`

Figure 5
--------

Distributions of digester to influent abundance ratios for the three reactor types (Mesophilic, thermophlic and THP) \`\`\`{r warning=FALSE, fig.align="center", fig.height=7, fig.width=10} ggplot(ratiodf)+ geom\_line(aes(x=RATIO,y=(..density..),weight=Frequency, colour = T\_reactor),size = 2, stat="density")+ ylab(label = "Density(weighted by abundance)")+ scale\_x\_log10(breaks = c(0.1,1,10,100,1000))+ theme(legend.title=element\_blank(),legend.position = "bottom")

Save the figure
===============

ggsave(filename = "Figure5.pdf",width = 10,height = 7, useDingbats = FALSE)
===========================================================================

\`\`\`

Supplementary figures
=====================

Figure S1
---------

OTU level heatmap for Archaea \`\`\`{r warning=FALSE,fig.align="center",fig.width=18,fig.height=9} p\_temp&lt;-amp\_heatmap(a\_ads\_s,tax.aggregate = "OTU",tax.add = c("Phylum","Genus"),tax.empty = "OTU",tax.show = 20,group = c("Temperature","Sample\_location"),color.vector = c("white","red"),plot.na = T)+ facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none")

Change labels
=============

original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank())

Save figure
===========

ggsave(filename = "FigureS1.pdf",width = 18,height = 9, useDingbats = FALSE)
============================================================================

\`\`\`

Figure S2
---------

Diversity indeces plots

\`\`\`{r warning=FALSE} \# Bacteria b\_ads\_unfiltered&lt;- subset\_samples(b\_d, Sample\_location %in% listof\_ads & Temperature %in% c("THP","Mesophilic","Thermophilic") & !(Project\_name %in% c("DNAextraction\_optimisation\_from\_biogas","VTU\_Case\_study\_-\_GasMixCase\_Viborg")) & !(SA\_ID %in% skiplist) & !(Sample\_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) & !(Dataset=="CJH" & Temperature=="THP"))

Archaea
=======

a\_ads\_unfiltered&lt;-subset\_samples(a\_d, Sample\_location %in% listof\_ads & Temperature %in% c("THP","Mesophilic","Thermophilic") & !(Project\_name %in% c("DNAextraction optimisation from biogas","VTU Case study - GasMixCase Viborg")) & !(SA\_ID %in% skiplist) & !(Sample\_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ")) \`\`\`

\`\`\`{r warning=FALSE ,fig.align="center",fig.width=10,fig.height=10} \# plots pS2\_a&lt;-plot\_richness(b\_ads\_unfiltered, x="Temperature", measures=c("Shannon"))+xlab("Reactor type")+ylim(c(0,7))+theme(axis.text.x = element\_text(angle = 90, hjust = 1))

pS2\_b&lt;-plot\_richness(a\_ads\_unfiltered, x="Temperature", measures=c("Shannon"))+xlab("Reactor type")+ylim(c(0,7))+theme(axis.text.x = element\_text(angle = 90, hjust = 1))

pS2\_c&lt;-plot\_richness(b\_ads\_unfiltered, x="Temperature", measures=c("Simpson"))+xlab("Reactor type")+ylim(c(0,1))+theme(axis.text.x = element\_text(angle = 90, hjust = 1))

pS2\_d&lt;-plot\_richness(a\_ads\_unfiltered, x="Temperature", measures=c("Simpson"))+xlab("Reactor type")+ylim(c(0,1))+theme(axis.text.x = element\_text(angle = 90, hjust = 1))

pS2\_a&lt;-pS2\_a+ggtitle("Bacteria") pS2\_b&lt;-pS2\_b+ggtitle("Archaea") pS2\_c&lt;-pS2\_c+ggtitle("Bacteria") pS2\_d&lt;-pS2\_d+ggtitle("Archaea")

plot\_grid(pS2\_a, pS2\_b, pS2\_c, pS2\_d, align='vh',ncol = 2, labels=c('A', 'B', 'C','D'))

Save figure
===========

ggsave(filename = "FigureS2.pdf",width = 10,height = 10, useDingbats = FALSE)
=============================================================================

\`\`\`

Figure S3
---------

OTU level heatmap for Bacteria \`\`\`{r warning=FALSE ,fig.align="center",fig.width=18,fig.height=9} p\_temp&lt;-amp\_heatmap(b\_ads\_s,tax.aggregate = "OTU",tax.add = c("Phylum","Genus"),tax.empty = "empty",tax.show = 20,group = c("Temperature","Sample\_location"),color.vector = c("white","red"),plot.na = T)+ facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none")

Change labels
=============

original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank())

Save figure
===========

ggsave(filename = "FigureS3.pdf",width = 18,height = 9, useDingbats = FALSE)
============================================================================

\`\`\`

Figure S4
---------

Heatmap with classification of OTUs based on their ratios

`{r warning=FALSE, fig.align="center",fig.width=20,fig.height=45} newdata$RATIOGROUP<-"empty" newdata$RATIOGROUP[which(newdata$maxratio>1)]<-"VAR" # 1 newdata$RATIOGROUP[which(newdata$maxratio>10)]<-"POS" # 10 newdata$RATIOGROUP[which(newdata$maxratio<1)]<-"NEG" # 1 ratiofuncttable<-newdata[,c("OTU","RATIOGROUP")] row.names(ratiofuncttable) <- NULL  names(ratiofuncttable)[1]<-"Genus"`

\`\`\`{r warning=FALSE, fig.align="center",fig.width=20,fig.height=45} nshow&lt;-100 p1 &lt;- amp\_heatmap(data = b\_ads\_s, c("Temperature","Sample\_location"), tax.aggregate = "OTU", tax.add=c("Phylum","Class","Order","Family","Genus"), tax.show=nshow, plot.na =T, plot.colorscale = "log", color.vector = c("white","red")) + facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none") \# Change labels original\_labels&lt;-levels(p1*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p1*d**a**t**a*Group.label&lt;-mapvalues(p1*d**a**t**a*Group,original\_labels,c(new\_labels)) p1&lt;-p1+aes(x=p1*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank())

p2&lt;-amp\_function(p1,adjust = 0,genus.pos = 6,functions = ratiofuncttable, selection = "RATIOGROUP")+theme(legend.position="none",plot.margin = unit(c(10,0,0,0), "mm")) grid.arrange(p1, p2, nrow = 1, widths = c(0.95, 0.05))

p &lt;- arrangeGrob(p1, p2, nrow=1,widths = c(0.95,0.05)) grid.draw(p) \# interactive device works

Save figure
===========

ggsave(filename = "FigureS4.pdf",plot = p,width = 20,height = 45, useDingbats = FALSE)
======================================================================================

\`\`\`

Figure S5
---------

Rank abundance curves for the three digester types (mesophilic, thermophilic and THP)

\`\`\`{r warning=FALSE,fig.align="center",fig.height=5,fig.width=5} ps1\_c&lt;-amp\_rabund(b\_ads\_s,group = "Temperature",plot.type = "curve")+xlim(0,1000)+theme(legend.justification=c(1,0), legend.position=c(1,0)) ps1\_c+geom\_vline(xintercept =300,colour="grey", linetype = "longdash")+geom\_hline(yintercept = 80,colour="grey", linetype = "longdash")

Save figure
===========

ggsave(filename = "FigureS5.pdf",width = 5,height = 5, useDingbats = FALSE)
===========================================================================

\`\`\`

Figure S6
---------

PCA plot of all the samples coloured by sample type

\`\`\`{r warning=FALSE ,fig.align="center",fig.height=7,fig.width=7} b\_sel&lt;- subset\_samples(b\_df, simple\_var3!="empty" & !(SA\_ID %in% skiplist) & !(Sample\_location=="Herning" & Temperature=="Mesophilic") & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) & !(Dataset=="CJH" & Temperature=="THP") & !(Project\_name %in% c("DNAextraction\_optimisation\_from\_biogas","VTU\_Case\_study\_-\_GasMixCase\_Viborg"))) \# Make labels prettier sample\_data(b\_sel)$simple\_var3&lt;-gsub(".) ", "", sample\_data(b\_sel)$simple\_var3) pS6&lt;-amp\_ordinate(b\_sel, plot.color = "simple\_var3", plot.group.label = "simple\_var3", plot.group.label.size = 7)+ theme\_cowplot()+ theme(plot.margin = unit(c(0,0,0,0), "mm"))+ theme(legend.position="none") pS6

Save the figure
===============

fname&lt;-paste0("FigureS6.pdf")
================================

\`\`\`

Figure S7
---------

Heatmap of the organisms in the primary sludge

\`\`\`{r warning=FALSE, fig.align="center",fig.height=7,fig.width=17} PS&lt;-subset\_samples(b\_df, simple\_var3=="a) Primary sludge")

p\_temp&lt;-amp\_heatmap(PS,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = 20,group = c("Sample\_location"),color.vector = c("white","red"),plot.na = T)+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none") \# Change labels original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank())

Save the figure
===============

ggsave(filename = "FigureS7.pdf",width = 17,height = 7, useDingbats = FALSE)
============================================================================

\`\`\`

Figure S8
---------

Heatmap of organisms in the surplus sludge

\`\`\`{r warning=FALSE, fig.align="center",fig.height=7,fig.width=17} AS&lt;-subset\_samples(b\_df, simple\_var3=="b) Surplus sludge")

p\_temp&lt;-amp\_heatmap(AS,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = 20,group = c("Sample\_location"),color.vector = c("white","red"),plot.na = T)+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none") \# Change labels original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank())

Save the figure
===============

ggsave(filename = "FigureS8.pdf",width = 17,height = 7, useDingbats = FALSE)
============================================================================

\`\`\`

Figure S9
---------

Distributions of digester to influent abundance ratios for for individual plants w. many samples

\`\`\`{r warning=FALSE} plant&lt;-"Viborg" plants&lt;-c("Viborg","Fredericia","Aalborg\_West","Bjergmarken","Ejby\_Moelle") ratiodf\_sel&lt;-data.frame(RATIO=double(), res\_RT.tag=character(), res\_RT.Mean=double(), plant=character()) for (plant in plants) {

#### 

Digester
========

### 

d\_sel&lt;- subset\_samples(b\_ads\_s, Sample\_location==plant)

res&lt;-data.frame("tag"=names(apply(otu\_table(d\_sel), 1, mean)),"Mean"=apply(otu\_table(d\_sel), 1, mean))

res\_RT&lt;-res

#### 

For influent
============

### 

d\_sel&lt;- subset\_samples(b\_df, Sample\_type=="Influent" & Sample\_location==plant)

res&lt;-data.frame("tag"=names(apply(otu\_table(d\_sel), 1, mean)),"Mean"=apply(otu\_table(d\_sel), 1, mean))

res\_inf&lt;-res \#\#\#\# \# Surplus sludge \#\#\# d\_sel&lt;- subset\_samples(b\_df, simple\_var3=="b) Surplus sludge" & Sample\_location==plant)

res&lt;-data.frame("tag"=names(apply(otu\_table(d\_sel), 1, mean)),"Mean"=apply(otu\_table(d\_sel), 1, mean))

res\_AS&lt;-res

Calculate ratio and plot
========================

options(scipen = 8) RATIO\_inf&lt;-res\_RT*M**e**a**n*/*r**e**s*<sub>*i*</sub>*n**f*Mean RATIO\_AS&lt;-res\_RT*M**e**a**n*/*r**e**s*<sub>*A*</sub>*S*Mean RATIO&lt;-apply(cbind(RATIO\_inf,RATIO\_AS),1,min)

mydf&lt;-data.frame(RATIO,res\_RT*t**a**g*, *r**e**s*<sub>*R*</sub>*T*Mean)

For creating a table of all the abundance values
================================================

tempdf&lt;-cbind(mydf,plant) tempdf*F**r**e**q**u**e**n**c**y* &lt; −*t**e**m**p**d**f*res\_RT.Mean/sum(tempdf$res\_RT.Mean) ratiodf\_sel&lt;-rbind(ratiodf\_sel,tempdf) } \`\`\`

\`\`\`{r warning=FALSE, fig.width=10,fig.height=7,fig.align="center"} ggplot(ratiodf\_sel)+ geom\_line(aes(x=RATIO,y=(..density..),weight=Frequency, colour = plant),size = 2, stat="density")+ ylab(label = "Density(weighted by abundance)")+ scale\_x\_log10(breaks = c(0.1,1,10,100,1000))+ theme(legend.title=element\_blank(),legend.position = "bottom")

Save the figure
===============

ggsave(filename = "FigureS9.pdf",width = 10,height = 7, useDingbats = FALSE)
============================================================================

\`\`\`

Figure S10
----------

OTUs within Gelria are different between mesophilic and thermophilic!

\`\`\`{r warning=FALSE, fig.align="center",fig.height=7,fig.width=10} gelria&lt;-subset\_taxa(b\_ads\_s, Genus=="g\_\_Gelria")

p\_temp&lt;-amp\_heatmap(gelria,tax.aggregate = "OTU",tax.show = 15,tax.add = "Genus",group = c("Temperature","Sample\_location"),color.vector = c("white","red"),plot.na = T)+ facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none") \# Change labels original\_labels&lt;-levels(p\_temp*d**a**t**a*Group) new\_labels &lt;- toupper(sub(".\*? ", "", original\_labels)) p\_temp*d**a**t**a*Group.label&lt;-mapvalues(p\_temp*d**a**t**a*Group,original\_labels,c(new\_labels)) p\_temp+aes(x=p\_temp*d**a**t**a*Group.label)+theme(axis.title.x=element\_blank())

Save the figure
===============

ggsave(filename = "FigureS10.pdf",width = 10,height = 7, useDingbats = FALSE)
=============================================================================

\`\`\`

Figure S11
----------

Timeseries for the reactor in Viborg during the survey \`\`\`{r warning=FALSE, fig.align="center",fig.height=10,fig.width=10} b\_ads\_s\_vib&lt;- subset\_samples(b\_df, Sample\_location=="Viborg" & Temperature %in% c("Mesophilic") & !(Project\_name %in% c("DNAextraction\_optimisation\_from\_biogas","VTU\_Case\_study\_-\_GasMixCase\_Viborg")) & !(SA\_ID %in% skiplist) & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) )

pS11\_a&lt;-amp\_heatmap(b\_ads\_s\_vib,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = 20,group = c("Collection\_date"),color.vector = c("white","red"),plot.na = T)+ \#facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none")+xlab("Sample date(yyyymmdd)")

b\_ads\_s\_aaw&lt;- subset\_samples(b\_df, Sample\_location=="Aalborg\_West" & Temperature %in% c("Thermophilic") & !(Project\_name %in% c("DNAextraction\_optimisation\_from\_biogas","VTU\_Case\_study\_-\_GasMixCase\_Viborg")) & !(SA\_ID %in% skiplist) & (Investigator!="CHJ") & !(SEQ\_ID %in% skiplist2) )

pS11\_b&lt;-amp\_heatmap(b\_ads\_s\_aaw,tax.aggregate = "Genus",tax.add = c("Phylum"),tax.empty = "OTU",tax.show = 20,group = c("Collection\_date"),color.vector = c("white","red"),plot.na = T)+ \#facet\_grid(~ Temperature,scales="free\_x",space="free")+ theme(plot.margin = unit(c(0,0,0,0), "mm"), axis.text.y = element\_text(color = "black"), strip.text.x = element\_text(color = "black"), axis.text.x = element\_text(vjust=0.5,color = "black"),legend.position="none")+xlab("Sample date(yyyymmdd)")

plot\_grid(pS11\_a, pS11\_b, align='vh',ncol = 1, labels=c('A', 'B'))

Save the figure
===============

ggsave(filename = "FigureS11.pdf",width = 10,height = 10, useDingbats = FALSE)
==============================================================================

\`\`\`
